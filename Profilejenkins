pipeline {
    agent {
        docker {
            image 'maven:3.8.1-adoptopenjdk-11'
        }
    }
    stages {
        stage('Build Web Application') {
            steps {
                sh 'mvn clean package' // Use 'clean package' to build a JAR file
            }
        }
        stage('Static Code Analysis') {
            environment {
                SONAR_URL = 'http://3.209.59.238:9000'
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_API_TOKEN')]) {
                    sh "mvn sonar:sonar -Dsonar.login=\$SONAR_API_TOKEN -Dsonar.host.url=\${SONAR_URL}"
                }
            }
        }
        stage('Build and Push Docker Image') {
            environment {
        DOCKER_IMAGE = "suba99ee/jenkinsprofile:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "SubashreeG/jenkins/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('dokcred')
      }
      steps {
        script {
            sh 'cd /usr/bin/docker && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://hub.docker.com/repository/docker/suba99ee', "dokcred") {
                dockerImage.push()
            }
        }

            }
        }
    }
}
